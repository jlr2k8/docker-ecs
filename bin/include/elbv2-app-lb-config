#!/bin/bash

. "${BASH_SOURCE%/*}"/bootstrap.sh

ELBV2_TARGET_GROUP_NAME="${1}"

# Create or use existing target group
ELBV2_TARGET_GROUP_ARN=$(aws elbv2 describe-target-groups \
    --region ${AWS_REGION} \
    --profile ${ECS_CRED_PROFILE} \
    --names "${ELBV2_TARGET_GROUP_NAME}" | grep TargetGroupArn | awk '{ print $2 }' | tr -d ',"')

if [ -z "${ELBV2_TARGET_GROUP_ARN}" ]; then
    echo
    echo "Creating target group"
    echo

    ELBV2_TARGET_GROUP_ARN=$(aws elbv2 create-target-group \
        --name "${ELBV2_TARGET_GROUP_NAME}" \
        --protocol HTTP \
        --port 80 \
        --vpc-id "${ECS_INSTANCE_VPC_ID}" \
        --region "${AWS_REGION}" \
        --profile "${ECS_CRED_PROFILE}" | grep TargetGroupArn | awk '{ print $2 }' | tr -d '",')
fi

# Create LB path rule
GET_HIGHEST_PRIORITY_NUM=$(aws elbv2 describe-rules \
    --region "${AWS_REGION}" \
    --profile "${ECS_CRED_PROFILE}" \
    --listener-arn "${ELBV2_HTTP_LISTENER_ARN}" | grep "Priority" | sort -rn | awk '{ print $2 }' | tr -d '",' | head -2 | tail -1)

if [ -z "${GET_HIGHEST_PRIORITY_NUM}" ] || [ "${GET_HIGHEST_PRIORITY_NUM}" == "default" ]; then
    GET_HIGHEST_PRIORITY_NUM=0
fi

PRIORITY=$(expr ${GET_HIGHEST_PRIORITY_NUM} + 1)

aws elbv2 create-rule \
    --listener-arn "${ELBV2_HTTP_LISTENER_ARN}" \
    --priority "${PRIORITY}" \
    --actions "Type=forward,TargetGroupArn=${ELBV2_TARGET_GROUP_ARN}" \
    --conditions "Field=path-pattern,Values=/${PROJECT_NAME}*" \
    --region "${AWS_REGION}" \
    --profile "${ECS_CRED_PROFILE}"